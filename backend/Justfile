image_name := "raccoon"
stack_name := "raccoon-ecr"
region := env("AWS_REGION", "eu-west-1")
timestamp := `date +%s`
image_tag := env("IMAGE_TAG", timestamp)
ecr_justfile := justfile_directory() + "/../ecr/Justfile"
export AWS_REGION := region
export AWS_PAGER := ""

meta:
    [ -f meta.json ] || echo "{}" > meta.json

create-ecr: meta
    #!/bin/bash -e
    just -f "{{ecr_justfile}}"  deploy "{{stack_name}}" "{{image_name}}"
    repo=$(just -f "{{ecr_justfile}}" get-uri "{{stack_name}}")
    jq --arg repo "$repo" '.repo = $repo' meta.json | sponge meta.json

delete-ecr: meta
    just -f "{{ecr_justfile}}" destroy "{{stack_name}}"
    jq 'del(.repo)' meta.json | sponge meta.json

build-image: meta
    #!/bin/bash -e
    repo=$(jq -r '.repo' meta.json)
    image="$repo:{{image_tag}}"
    echo "Building image $image"
    podman build . -t "$image"
    jq --arg image "$image" '.image = $image' meta.json | sponge meta.json

deploy: meta
    #!/bin/bash -e
    image=$(jq -r '.image' meta.json)
    account_id=$(aws sts get-caller-identity | jq -r '.Account')
    aws ecr get-login-password | podman login --username AWS --password-stdin "${account_id}.dkr.ecr.{{region}}.amazonaws.com"
    podman push "$image"
    echo "Deploying image $image"
    cd infra && tofu init && tofu apply -auto-approve -var "image=$image" -var-file="dev.tfvars"

[working-directory: "infra"]
tf-destroy:
    tofu destroy -auto-approve -var "image=tmp" -var-file="dev.tfvars"

destroy: tf-destroy delete-ecr

tf-fmt:
    tofu fmt -recursive "{{justfile_directory()}}/infra"